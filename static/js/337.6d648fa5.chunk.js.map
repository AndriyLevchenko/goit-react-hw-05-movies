{"version":3,"file":"static/js/337.6d648fa5.chunk.js","mappings":"yRAEaA,EAAgBC,EAAAA,GAAAA,OAAH,+bAkBbC,EAAaD,EAAAA,GAAAA,KAAH,4KASVE,EAAmBF,EAAAA,GAAAA,OAAH,0gBA2BhBG,EAAkBH,EAAAA,GAAAA,MAAH,gP,2BC5Cb,SAASI,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAiC/B,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,8GAE6BC,EAAAA,EAAAA,IAAiBH,GAF9C,OAG8B,KADpBI,EAFV,QAGmBC,QACbC,MAAM,4DAAD,OAAgBN,EAAhB,gHAEPN,EAAUU,GANd,gDAQIG,EAAAA,GAAAA,MAAY,iEAAgB,CAAEC,SAAU,eAR5C,0DALc,sBACA,OAAVR,GADU,mCAiBdS,EACD,GAAE,CAACT,KAGF,iCACE,SAACd,EAAD,WACE,UAACE,EAAD,CAAYsB,SAlCG,SAAAC,GACnBA,EAAEC,iBACFb,EAAgB,CAAEC,MAAOW,EAAEE,cAAcC,SAASd,MAAMe,QAEJ,KAAhDJ,EAAEE,cAAcC,SAASd,MAAMe,MAAMC,OAIzCL,EAAEE,cAAcI,QAHdV,EAAAA,GAAAA,MAAY,gIAA6B,CAAEC,SAAU,cAIxD,EAyBK,WACE,UAACnB,EAAD,CAAkB6B,KAAK,SAAvB,WACE,SAAC,MAAD,CAAUC,KAAM,KADlB,KACyB,yCAGzB,SAAC7B,EAAD,CACE4B,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,eAKV9B,EAAOY,OAAS,IACf,wBACGZ,EAAO+B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMlC,GAA1C,SACG+B,KAFID,EADC,QAWrB,C","sources":["components/MoviesPage/MoviesPage.styled.jsx","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchbarHead = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);` \n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;` \n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n  opacity: 1;\n}\nspan {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n}`\n  \nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n&:placeholder {\n  font: inherit;\n  font-size: 18px;\n}`","import { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchFilmsSearch } from 'api-srv/fetchFilms';\nimport {\n  SearchbarHead,\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from './MoviesPage.styled';\nimport { FcSearch } from 'react-icons/fc';\nimport { toast } from 'react-toastify';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.currentTarget.elements.query.value });\n\n    if (e.currentTarget.elements.query.value.trim() === '') {\n      toast.error('Все пропало, пиши наново!', { position: 'top-center' });\n      return;\n    }\n    e.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n\n    async function SearchFilms() {\n      try {\n        const cardSearch = await fetchFilmsSearch(query);\n        if (cardSearch.length === 0) {\n          alert(`за запитом \"${query}\", фільмів не знайдено`);\n        }\n        setMovies(cardSearch);\n      } catch (error) {\n        toast.error('Все пропало!', { position: 'top-center' });\n      }\n    }\n\n    SearchFilms();\n  }, [query]);\n\n  return (\n    <>\n      <SearchbarHead>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormButton type=\"submit\">\n            <FcSearch size={18} /> <span>Search</span>\n          </SearchFormButton>\n\n          <SearchFormInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            name=\"query\"\n          />\n        </SearchForm>\n      </SearchbarHead>\n\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}"],"names":["SearchbarHead","styled","SearchForm","SearchFormButton","SearchFormInput","MoviesPage","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchFilmsSearch","cardSearch","length","alert","toast","position","SearchFilms","onSubmit","e","preventDefault","currentTarget","elements","value","trim","reset","type","size","autoComplete","autoFocus","placeholder","name","map","id","title","to","state","from"],"sourceRoot":""}